'use client';

import React, { useState, useEffect } from 'react';

// HealthPackageForm Component
const HealthPackageForm = ({ isOpen, onClose, onSubmit }) => {
    const [name, setName] = useState('');
    const [email, setEmail] = useState('');
    const [phone, setPhone] = useState('');
    const [date, setDate] = useState('');
    const [messages, setMessages] = useState('');
    const [dateError, setDateError] = useState(false);

    useEffect(() => {
        if (!isOpen) {
            // Reset form fields when the form is closed
            setName('');
            setEmail('');
            setPhone('');
            setDate('');
            setMessages('');
            setDateError(false);
        }
    }, [isOpen]);

    const handleSubmit = (e) => {
        e.preventDefault();
        if (!date) {
            setDateError(true);
            return;
        }
        setDateError(false);

        const formData = {
            name,
            email,
            phone,
            date,
            messages,
        };
        onSubmit(formData);
    };

    if (!isOpen) return null;

    return (
        <div className="master-health-form-overlay">
            <div className="master-health-form-container">
                <div className="master-health-form-header">
                    <h3>Health Package Appointment</h3>
                    <button className="master-health-close-button" onClick={onClose}>&times;</button>
                </div>
                <form onSubmit={handleSubmit}>
                    <input
                        type="text"
                        placeholder="Name"
                        value={name}
                        onChange={(e) => setName(e.target.value)}
                        required
                    />
                    <input
                        type="email"
                        placeholder="Email"
                        value={email}
                        onChange={(e) => setEmail(e.target.value)}
                        required
                    />
                    <input
                        type="tel"
                        placeholder="Phone"
                        value={phone}
                        onChange={(e) => setPhone(e.target.value)}
                        required
                        minLength="10" // Enforce minimum 10 digits
                        maxLength="10" // Enforce maximum 10 digits
                        pattern="[0-9]{10}" // Ensure exactly 10 digits
                        title="Phone number must be 10 digits" // Tooltip for invalid input
                    />
                    <input
                        type="date"
                        placeholder="Enter Date"
                        value={date}
                        onChange={(e) => {
                            setDate(e.target.value);
                            setDateError(false);
                        }}
                        required
                    />
                    {dateError && <p className="master-health-error-message">This field is required.</p>}
                    <textarea
                        placeholder="Messages"
                        value={messages}
                        onChange={(e) => setMessages(e.target.value)}
                    ></textarea>
                    <button type="submit" className="master-health-submit-button">SUBMIT</button>
                </form>
            </div>
        </div>
    );
};

function MasterHealthCheckups() {
    const [openIndex, setOpenIndex] = useState(0); // First FAQ open by default
    const [isFormOpen, setIsFormOpen] = useState(false);

    const faqData = [
        {
            question: "Cardiac Master Health Checkup",
            answer: [
                "Hemogram (CBC)",
                "Blood Group",
                "ESR",
                "Blood Glucose - (F)",
                "Blood Glucose (2 Hrs PP)",
                "HbA1c (Glycated Hemoglobin A1c)",
                "Urea",
                "Creatinine",
                "Uric Acid",
                "Lipid Profile",
                "Sodium",
                "Potassium",
                "Bilirubin - Total & Direct",
                "Total Protein And A/G Ratio",
                "AST (SGOT)",
                "ALT (SGPT)",
                "Hs Crp",
                "Urine Micro Albumin / Creatinine Ratio",
                "Vitamin D",
                "FT3, FT4, TSH",
                "Urine Complete Analysis",
                "XRAY CHEST PA",
                "Ultrasonagraphy Abdomen - Kub",
                "Echo Cardiogram",
                "ECG",
                "Eye Checkup",
            ]
        },
        {
            question: "Diabetic Master Health Checkup",
            answer: [
                "Hemogram (CBC)",
                "Blood Group",
                "ESR",
                "Blood Glucose - (F)",
                "Blood Glucose (2 Hrs PP)",
                "HbA1c (Glycated Hemoglobin A1c)",
                "Urea",
                "Creatinine",
                "Uric Acid",
                "Lipid Profile",
                "Sodium",
                "Potassium",
                "Bilirubin - Total & Direct",
                "Total Protein And A/G Ratio",
                "AST (SGOT)",
                "ALT (SGPT)",
                "Urine Micro Albumin / Creatinine Ratio",
                "FT3, FT4, TSH",
                "Urine Complete Analysis",
                "XRAY CHEST PA",
                "ECG",
                "Ultrasonagraphy Abdomen - Kub",
                "Vascular Doppler & Vibrotham",
                "Podiascan",
                "Eye Checkup",
            ]
        },
        {
            question: "General Master Health Checkup",
            answer: [
                "Hemogram (CBC)",
                "Blood Group",
                "ESR",
                "Blood Glucose - (F)",
                "Blood Glucose (2 Hrs PP)",
                "HbA1c (Glycated Hemoglobin A1c)",
                "Urea",
                "Creatinine",
                "Uric Acid",
                "Lipid Profile",
                "Sodium",
                "Potassium",
                "Bilirubin - Total & Direct",
                "Total Protein And A/G Ratio",
                "AST (SGOT)",
                "ALT (SGPT)",
                "Urine Micro Albumin / Creatinine Ratio",
                "FT3, FT4, TSH",
                "Urine Complete Analysis",
                "XRAY CHEST PA",
                "ECG",

            ]
        },
        {
            question: "Executive Master Health Checkup",
            answer: [
                "Hemogram (CBC)",
                "Blood Group",
                "ESR",
                "Blood Glucose - (F)",
                "Blood Glucose (2 Hrs PP)",
                "HbA1c (Glycated Hemoglobin A1c)",
                "Urea",
                "Creatinine",
                "Uric Acid",
                "Lipid Profile",
                "Sodium, Potassium",
                "Bilirubin - Total & Direct",
                "Total Protein And A/G Ratio",
                "AST (SGOT)",
                "ALT (SGPT)",
                "Hs Crp",
                "Urine Micro Albumin / Creatinine Ratio",
                "Vitamin D",
                "FT3, FT4, TSH",
                "HBsAg, HCV",
                "PSA (Prostate Specific Antigen) (Male)",
                "Urine Complete Analysis",
                "XRAY CHEST PA",
                "ECG",
                "Echo Cardiogram",
                "Uroflow Meter",
                "Ultrasonagraphy Abdomen - Kub",
                "Vascular Doppler & Vibrotham",
                "Podiascan",
                "Eye Checkup",
            ]
        },
    ];

    const toggleAnswer = (index) => {
        setOpenIndex(openIndex === index ? null : index);
    };

    const handleBookNowClick = () => {
        setIsFormOpen(true);
    };

    const handleFormSubmit = async (formData) => {
        console.log('Form Data to send:', formData);

        const dataToSend = {
            title: "Health Package Form", // Added title here
            ...formData,
        };

        // Replace with your actual webhook URL
        const webhookUrl = 'https://play.svix.com/in/e_fj8CbU3MjuXGTohGwvtBBTd4M1z/'; // <--- IMPORTANT: Replace this with your actual webhook URL

        try {
            const response = await fetch(webhookUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(dataToSend),
            });

            if (response.ok) {
                console.log('Form submitted successfully!');
                alert('Appointment booked successfully!');
                setIsFormOpen(false); // Close the form on successful submission
            } else {
                console.error('Form submission failed:', response.statusText);
                alert('Failed to book appointment. Please try again.');
            }
        } catch (error) {
            console.error('Error submitting form:', error);
            alert('An error occurred. Please try again.');
        }
    };

    return (
        <>
            <style>
                {`
                .master-health-container {
                    display: flex;
                    flex-wrap: wrap;
                    justify-content: center;
                    padding: 20px;
                    font-family: Arial, sans-serif;
                    max-width: 1300px;
                    margin: 0 auto;
                }

                .master-health-box-container {
                    display: flex;
                    flex-direction: column;
                    width: 45%;
                    margin: 10px;
                }

                .master-health-faq-box {
                    border: 1px solid #ddd;
                    border-radius: 8px;
                    margin-bottom: 10px;
                    overflow: hidden;
                    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                }

                .master-health-question {
                    background-color: #f9f9f9;
                    padding: 15px;
                    cursor: pointer;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    font-weight: bold;
                    color: #333;
                }
                    /* New styles for heading, subheading, and pills */
.master-health-section-wrap {
    position: relative;
    overflow: clip;
    background: transparent;
    isolation: isolate;
}

.master-health-section-content {
    position: relative;
    display: flex;
    flex-direction: column;
    max-width: 1300px;
    margin: 0 auto;
    padding: 25px 25px; /* Adjust padding as needed */
    color: var(--ink); /* Assuming --ink is defined in your global CSS or you can define it here */
    z-index: 1;
}

.master-health-pills {
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    justify-content: left;
    margin-bottom: 18px;
}
.master-health-pill {
    display: inline-flex;
    align-items: center;
    gap: 6px;
    padding: 6px 10px;
    border-radius: 999px;
    font-size: 12px;
    letter-spacing: 0.02em;
    background: rgba(47, 128, 237, 0.08);
    color: #1f4e9b;
    border: 1px solid rgba(47, 128, 237, 0.18);
}

.master-health-heading {
    margin: 0 0 8px;
    font-size: 40px;
    line-height: 1.08;
    font-weight: 900;
    letter-spacing: -0.02em;
    text-align: left;
    background: linear-gradient(92deg, #0b1324 0%, #274760 00%, #2f80ed 90%);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
}
@media (max-width: 768px) {
    .master-health-heading { font-size: 34px; }
}
@media (max-width: 480px) {
    .master-health-heading { font-size: 30px; }
}

.master-health-subdesc {
    margin: 10px 0px;
    max-width: 1400px;
    text-align: left;
    color: #475569; /* Using a direct color, assuming --muted is not globally available */
    line-height: 1.7;
    font-size: 16px;
}

                .master-health-answer {
                    padding: 15px;
                    background-color: #fff;
                    border-top: 1px solid #eee;
                }

                .master-health-answer-list-item {
                    margin-bottom: 5px;
                    list-style-type: disc;
                    margin-left: 20px;
                    color: #555;
                }

                .master-health-arrow {
                    font-size: 1.2em;
                    transition: transform 0.3s ease-in-out;
                }

                .master-health-main-heading {
                    text-align: left;
                    width: 100%;
                    color : #2c3e50;
                    max-width: 1200px;
                    margin: 0 auto 0 auto;
                    padding: 0 20px;
                    box-sizing: border-box;
                }

                .master-health-book-now-button {
                    background: linear-gradient(to right, #0056b3, #003f7f); /* Gradient color */
                    color: white;
                    border: none;
                    padding: 10px 20px;
                    border-radius: 5px;
                    cursor: pointer;
                    font-size: 1em;
                    margin-top: 15px;
                    display: block;
                    width: fit-content;
                    margin-left: auto;
                    margin-right: auto;
                    transition: background 0.3s ease; /* Smooth transition for hover */
                }

                .master-health-book-now-button:hover {
                    background: linear-gradient(to right, #003f7f, #0056b3); /* Reversed gradient on hover */
                }

                /* Form Overlay and Container Styles */
                .master-health-form-overlay {
                    position: fixed;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    background: rgba(0, 0, 0, 0.5);
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    z-index: 1000;
                }

                .master-health-form-container {
                    background: white;
                    padding: 20px;
                    border-radius: 8px;
                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
                    width: 90%;
                    max-width: 400px;
                    position: relative;
                }

                .master-health-form-header {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    margin-bottom: 20px;
                }

                .master-health-form-header h3 {
                    margin: 0;
                    font-size: 1.5em;
                    color: #333;
                }

                .master-health-close-button {
                    background: none;
                    border: none;
                    font-size: 2em;
                    cursor: pointer;
                    color: #888;
                }

                .master-health-close-button:hover {
                    color: #333;
                }

                .master-health-form-container input,
                .master-health-form-container textarea {
                    width: calc(100% - 20px);
                    padding: 10px;
                    margin-bottom: 15px;
                    border: 1px solid #ddd;
                    border-radius: 5px;
                    font-size: 1em;
                }

                .master-health-form-container textarea {
                    resize: vertical;
                    min-height: 80px;
                }

                .master-health-submit-button {
                    background: linear-gradient(to right, #0056b3, #003f7f); /* Gradient color */
                    color: white;
                    border: none;
                    padding: 12px 20px;
                    border-radius: 25px;
                    cursor: pointer;
                    font-size: 1.1em;
                    width: 100%;
                    font-weight: bold;
                    text-transform: uppercase;
                    letter-spacing: 1px;
                    transition: background 0.3s ease; /* Smooth transition for hover */
                }

                .master-health-submit-button:hover {
                    background: linear-gradient(to right, #003f7f, #0056b3); /* Reversed gradient on hover */
                }

                .master-health-error-message {
                    color: red;
                    font-size: 0.9em;
                    margin-top: -10px;
                    margin-bottom: 10px;
                }

                /* New styles for heading, subheading, and pills */
                .master-health-section-wrap {
                    position: relative;
                    overflow: clip;
                    background: transparent;
                    isolation: isolate;
                }

                .master-health-section-content {
                    position: relative;
                    display: flex;
                    flex-direction: column;
                    max-width: 1300px;
                    margin: 0 auto;
                    padding: 25px 25px; /* Adjust padding as needed */
                    color: var(--ink); /* Assuming --ink is defined in your global CSS or you can define it here */
                    z-index: 1;
                }

                .master-health-pills {
                    display: flex;
                    gap: 10px;
                    flex-wrap: wrap;
                    justify-content: left;
                    margin-bottom: 18px;
                }
                .master-health-pill {
                    display: inline-flex;
                    align-items: center;
                    gap: 6px;
                    padding: 6px 10px;
                    border-radius: 999px;
                    font-size: 12px;
                    letter-spacing: 0.02em;
                    background: rgba(47, 128, 237, 0.08);
                    color: #1f4e9b;
                    border: 1px solid rgba(47, 128, 237, 0.18);
                }

                .master-health-heading {
                    margin: 0 0 8px;
                    font-size: 40px;
                    line-height: 1.08;
                    font-weight: 900;
                    letter-spacing: -0.02em;
                    text-align: left;
                    background: linear-gradient(92deg, #0b1324 0%, #274760 00%, #2f80ed 90%);
                    -webkit-background-clip: text;
                    background-clip: text;
                    color: transparent;
                }
                @media (max-width: 768px) {
                    .master-health-heading { font-size: 34px; }
                }
                @media (max-width: 480px) {
                    .master-health-heading { font-size: 30px; }
                }

                .master-health-subdesc {
                    margin: 10px 0px;
                    max-width: 1400px;
                    text-align: left;
                    color: #475569; /* Using a direct color, assuming --muted is not globally available */
                    line-height: 1.7;
                    font-size: 16px;
                }


                /* Mobile alignment */
                @media (max-width: 768px) {
                .lab-intro-content h3{
                        margin-top: 0;
                        font-size: 1.6rem;
                        margin-bottom: 1rem;
                }
                    .master-health-box-container {
                        width: 95%;
                    }
                    .master-health-main-heading {
                        padding: 0 20px;
                    }
                    .master-health-form-container {
                        width: 90%;
                    }
                }
                `}
            </style>
            <div className="master-health-section-wrap">
                <div className="master-health-section-content">
                    <div className="master-health-pills">
                        <span className="master-health-pill">Comprehensive Care</span>
                        <span className="master-health-pill">Personalized Packages</span>
                    </div>

                    <h2 className="master-health-heading">Master Health Checkups</h2>
                    <p className="master-health-subdesc">
                        Explore our range of master health checkup packages designed to keep you healthy. Book an appointment today for a comprehensive assessment.
                    </p>
                </div>
            </div>
            <div className="master-health-container">
                <div className="master-health-box-container">
                    {faqData.slice(0, Math.ceil(faqData.length / 2)).map((item, index) => (
                        <div key={index} className="master-health-faq-box">
                            <div className="master-health-question" onClick={() => toggleAnswer(index)}>
                                {item.question}
                                <span className="master-health-arrow" style={{ transform: openIndex === index ? 'rotate(180deg)' : 'rotate(0deg)' }}>&#9660;</span>
                            </div>
                            {openIndex === index && (
                                <div className="master-health-answer">
                                    <ul>
                                        {item.answer.map((ans, ansIndex) => (
                                            <li key={ansIndex} className="master-health-answer-list-item">{ans}</li>
                                        ))}
                                    </ul>
                                    <button className="master-health-book-now-button" onClick={handleBookNowClick}>Book Now</button>
                                </div>
                            )}
                        </div>
                    ))}
                </div>
                <div className="master-health-box-container">
                    {faqData.slice(Math.ceil(faqData.length / 2)).map((item, index) => (
                        <div key={index + Math.ceil(faqData.length / 2)} className="master-health-faq-box">
                            <div className="master-health-question" onClick={() => toggleAnswer(index + Math.ceil(faqData.length / 2))}>
                                {item.question}
                                <span className="master-health-arrow" style={{ transform: openIndex === (index + Math.ceil(faqData.length / 2)) ? 'rotate(180deg)' : 'rotate(0deg)' }}>&#9660;</span>
                            </div>
                            {openIndex === (index + Math.ceil(faqData.length / 2)) && (
                                <div className="master-health-answer">
                                    <ul>
                                        {item.answer.map((ans, ansIndex) => (
                                            <li key={ansIndex} className="master-health-answer-list-item">{ans}</li>
                                        ))}
                                    </ul>
                                    <button className="master-health-book-now-button" onClick={handleBookNowClick}>Book Now</button>
                                </div>
                            )}
                        </div>
                    ))}
                </div>
            </div>
            <HealthPackageForm
                isOpen={isFormOpen}
                onClose={() => setIsFormOpen(false)}
                onSubmit={handleFormSubmit}
            />
        </>
    );
}

export default MasterHealthCheckups;